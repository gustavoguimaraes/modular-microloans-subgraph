// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CommitExpired extends ethereum.Event {
  get params(): CommitExpired__Params {
    return new CommitExpired__Params(this);
  }
}

export class CommitExpired__Params {
  _event: CommitExpired;

  constructor(event: CommitExpired) {
    this._event = event;
  }

  get commitId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CommitExpiringWarning extends ethereum.Event {
  get params(): CommitExpiringWarning__Params {
    return new CommitExpiringWarning__Params(this);
  }
}

export class CommitExpiringWarning__Params {
  _event: CommitExpiringWarning;

  constructor(event: CommitExpiringWarning) {
    this._event = event;
  }

  get commitId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CheckExpiration extends ethereum.SmartContract {
  static bind(address: Address): CheckExpiration {
    return new CheckExpiration("CheckExpiration", address);
  }

  preCommitManager(): Address {
    let result = super.call(
      "preCommitManager",
      "preCommitManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_preCommitManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "preCommitManager",
      "preCommitManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get preCommitManager_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class EveryHourCall extends ethereum.Call {
  get inputs(): EveryHourCall__Inputs {
    return new EveryHourCall__Inputs(this);
  }

  get outputs(): EveryHourCall__Outputs {
    return new EveryHourCall__Outputs(this);
  }
}

export class EveryHourCall__Inputs {
  _call: EveryHourCall;

  constructor(call: EveryHourCall) {
    this._call = call;
  }
}

export class EveryHourCall__Outputs {
  _call: EveryHourCall;

  constructor(call: EveryHourCall) {
    this._call = call;
  }
}
